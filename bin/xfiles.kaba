use "lib/std.kaba"
use "lib/mtk/mtk.kaba"
use "lib/draw.kaba"

string dir_append(string dir, string e)
	string r = dir
	if r.tail(1) != "/"
		r += "/"
	return r + e

class FilesView extends MtkWidget
	string dir
	DirEntry[] list
	void __init__(string dir)
		self.dir = dir
		list = DirSearch(dir, "*", true)
		snd = MtkSizeNegotiationData(30, 30, true, true)
	
	override bool can_grab_input()
		return true
	
	override void draw()
		if win.active
			p.set_color(col_window_frame)
		else
			p.set_color(col_background)
		p.rectangle(p.all)
		p.fill()
		
		for e,i in list
			if e.is_dir
				p.draw_image(10, 10 + i * 20, icon_dir)
			else
				p.draw_image(10, 10 + i * 20, icon_file)
			p.set_color(col_text)
			p.draw_str(30, 10 + i * 20, e.name)
		p.draw_str(200, 10, dir)
	
	override void onMouseMove()
	override void onMouseLeftButtonDown()
		for e,i in list
			if mx >= 10 and mx < 200 and my >= 10+i*20 and my < 30+i*20
				if e.is_dir
					dir = dir_append(dir, e.name)
					list = DirSearch(dir, "*", true)
					draw()
					//p.end()
					break
				else
					string[] cmd
					cmd.add("/bin/xedit")
					cmd.add(dir_append(dir, e.name))
					if execute(cmd, -1, -1) < 0
						mtk_error_box("execute..." + lib_error)
	override void onMouseLeftButtonUp()
	override void onKey(int key)
		

class FilesWindow extends MtkWindow
	FilesView* v
	void __init__(string dir)
		super.__init__("XFiles", 600, 400)
		
		v = new FilesView(dir)
		put(v)
		
		

FilesWindow* window
Image* icon_dir, icon_file

void main()
	mtk_init()
	string[] arg
	get_args(arg)
	
	icon_dir = new Image(16, 16, color(1, 0.5, 0.5, 0))
	icon_file = new Image(16, 16, color(1, 0.8, 0.8, 0.8))
	
	if arg.num > 1
		window = new FilesWindow("/")//arg[1])
	else
		window = new FilesWindow("/")
	window.show()
	
	mtk_run()
	
