#define __OS__
use "lib/std.kaba"

const int XCMD_KILL = 666
const int XCMD_NEW_WINDOW = 1024
const int XCMD_DEL_WINDOW = 1025
const int XCMD_MOVE_WINDOW = 1026
const int XCMD_INVALIDATE_WINDOW = 1027

class XWindow
	int id
	int[0]* buf
	void invalidate()
		xcon.send(XCMD_INVALIDATE_WINDOW, id, -1, -1, -1, -1)
	void move(int x, int y)
		xcon.send(XCMD_MOVE_WINDOW, id, x, y, 0, 0)

class XConnection
	int[0]* buf
	
	void __init__()
	
		print "client: key="
		int key = randi(1000000)
		print key
		int id = shmget(key, 1024, SHM_DEST | IPC_CREAT)
		buf = shmat(id, 0)
		print "\n"
	
		// connect
		int id0 = shmget(0x7bcd0123, 0, 0)
		int[0]* buf0 = shmat(id0, 0)
	
		while buf0[0] != 0
			nil
		buf0[0] = 13
		buf0[1] = key
		buf0[0] = 1
		shmdt(buf0)
	
	void wait_sendable()
		while buf[0] != 0
			nil
	
	int send(int cmd, int p1, int p2, int p3, int p4, int p5)
		wait_sendable()
		buf[0] = 13
		buf[1] = cmd
		buf[2] = p1
		buf[3] = p2
		buf[4] = p3
		buf[5] = p4
		buf[6] = p5
		buf[0] = 1
		wait_sendable()
		return buf[32]

	void send_exit()
		send(XCMD_KILL, 0, 0, 0, 0, 0)

XWindow *CreateWin(int x, int y, int w, int h)
	XWindow *win = new XWindow
	win.id = xcon.send(XCMD_NEW_WINDOW, x, y, w, h, 0)
	int key = xcon.buf[33]
	int id = shmget(key, 0, 0)
	win.buf = shmat(id, 0)
	print "client: ok"
	print " "
	print p2s(win.buf)
	print "\n"
	return win

XConnection *xcon

void main()
	init_lib()
	
	stdout = open("/dev/tty", O_WRONLY)
	
	rand_seed(getpid())
	
	xcon = new XConnection
	
	XWindow *w = CreateWin(10 + randi(400), 10 + randi(200), 100, 100)
	if w
		int c = 0xff000000
		c += randi(255) << 16
		c += randi(255) << 8
		c += randi(255)
		for j in 0:100
			for i in 0:100
				w.buf[i + j * 100] = c
		w.invalidate()
	
	while true
		sleep(10)
		
		w.move(randi(500), randi(400))
	
	xcon.send_exit()
	
	exit(0)
