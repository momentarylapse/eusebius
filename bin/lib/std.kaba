#define __FUNCTION_POINTER_AS_CODE__

const int O_RDONLY = 1
const int O_WRONLY = 2
const int O_RDWR = 3
const int O_APPEND = 16
const int O_CREATE = 32
const int O_NONBLOCK = 64
const int O_TRUNC = 128


const int EWOULDBLOCK = 128
const int ENOSPC = 127
const int EACCES = 126
const int EEXIST = 125
const int EINVAL = 124
const int ENOENT = 123
const int ENOMEM = 122
const int ESRCH = 121
const int ECHILD = 120
const int EBADF = 119
const int ENFILE = 118
const int EFAULT = 117
const int ENOSYS = 116
const int ENOTDIR = 115
const int EISDIR = 114
const int ENOTEMPTY = 113
const int ENOTSOCK = 112
const int EADDRINUSE = 111
const int ECONNREFUSED = 110
const int ENOTCONN = 109

const int F_GETFL = 1
const int F_SETFL = 2

const int SEEK_SET = 1
const int SEEK_CUR = 2
const int SEEK_END = 3

const int SIGKILL = 9
const int SIGSEGV = 11
const int SIGCONT = 18
const int SIGSTOP = 19
const int SIGX = 23



const int SHM_ABSOLUTE = 1 << 20
const int SHM_DEST = 1<<11
const int IPC_CREAT = 1<<12
const int IPC_EXCL = 1<<13

class TimeValue
	int sec, nanosec

class SysInfo
	int uptime
	int[3] loads
	int totalram, freeram, sharedram, bufferram
	int totalswap, freeswap
	int procs
	int totalhigh, freehigh
	int mem_unit
	int[2] pad
	int totalheap, freeheap

class TaskInfo
	cstring name
	int pid, ppid, mode, status
	int mem
	int cpu
	TimeValue life
	void __assign__(TaskInfo o)
		pass

class MountInfo
	int major, minor
	cstring dir
	void __assign__(MountInfo o)
		pass
class BlockDevice
	int major, minor
	int disk_no
	int offset, size
	int block_size
	char type
	bool active
	cstring name
	void *p
	void __assign__(BlockDevice o)
		pass

class StatData
	cstring name
	int type
	int size
	int inode
	int mp_inode
	int time
	void __assign__(StatData o)
		pass

extern void init_lib()
extern void get_args(string[] arg)

extern int *malloc_first_free

extern int stdin, stdout
extern int lib_error
extern bool lib_mem_debug
extern bool lib_print_endl

extern string cs2s(cstring cs)
extern string binary(void *p, int num)

extern bool exit(int r)
extern int execute(string[] arg, int fd_in, int fd_out)
extern int fork()
extern int open(string filename, int flags)
extern int create(string filename)
extern bool close(int h)
extern int read(int h, void *buf, int size)
extern int write(int h, void *buf, int size)
extern int seek(int h, int offset, int mode)
extern bool mkdir(string filename)
extern bool rmdir(string filename)
extern bool mkfifo(string filename)
extern bool unlink(string filename)
extern int dup(int h)
extern bool pipe(int[2] h)
extern int fcntl(int h, int op, int param)
extern int getpid()
extern string getcwd()
extern bool chdir(string dir)
extern int waitpid(int pid, void *status, bool block)
extern bool kill(int pid, int signal)
extern int shmget(int key, int size, int flags)
extern void* shmat(int id, int flags)
extern bool shmdt(void* p)
extern bool waitmsg()
extern bool yield(int pid)
extern bool sysinfo(SysInfo s)
extern bool taskinfo(int pid, out TaskInfo t)
extern bool mountinfo(int index, out MountInfo i)
extern bool blockinfo(int major, int minor, out BlockDevice d)
extern bool stat(string filename, out StatData s)
extern bool sched_yield(int pid)
extern bool uname(void *buf)
extern bool time(TimeValue t)
extern bool nanosleep(TimeValue a, TimeValue b)
extern bool sleep(int sec)
extern bool usleep(int usec)
extern bool sigaction(int sig, void* f)
extern bool mapirq(int irq, int signal)
extern int addr2phys(void *p)

extern void kprint(string s)
extern void kprinti(int i)

extern int socket(int type)
extern bool bind(int fd, int port)
extern bool connect(int fd, int port)
extern bool listen(int fd)
extern int accept(int fd)

extern void memcpy(void* dest, void* source, int size)

# because std lib is 64bit...
extern int Filesystem_size32(string filename)

