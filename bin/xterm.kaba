use "lib/std.kaba"
use "lib/mtk/mtk.kaba"
use "lib/draw.kaba"
use hui

const int LINE_HEIGHT = 17


class History
	ShellView* view
	string[] lines
	void __init__()
		view = nil
		lines.add("")
	void add(string s)
		for c in s
			if c == 10
				lines.add("")
			else if c == 0x7f or c == 8
				if lines[lines.num - 1].num > 0
					lines[lines.num - 1].resize(lines[lines.num - 1].num - 1)
			else
				lines[lines.num - 1].add(c)
		if view
			view.draw()
			view.p.end()
		

class Job extends MtkIdle
	int pid
	bool done
	int[2] pipe_in, pipe_out # from job's point of view
	void __init__(string[] c)
		done = false
		pipe_in[0] = -1
		pipe_in[1] = -1
		pipe_out[0] = -1
		pipe_out[1] = -1
		pid = -1
		
		pipe(pipe_in)
		pipe(pipe_out)
		
		pid = execute(c, pipe_in[0], pipe_out[1])
		close(pipe_in[0])
		close(pipe_out[1])
		fcntl(pipe_out[0], F_SETFL, O_RDONLY | O_NONBLOCK)
		
		# debug
		#string s = "ls\n"
		#write(pipe_in[1], &s[0], s.num)
	
	override void __delete__()
		close(pipe_in[1])
		close(pipe_out[0])

	override void do()
		test()
	
	void test()
		string s
		s.resize(512)
		int r = read(pipe_out[0], &s[0], s.num)
		if r > 0
			s.resize(r)
			window.history.add(s)
			#print s
			s.clear()
			return
		
		s.clear()
		int status
		if waitpid(pid, &status, false) == -2
			return
		window.history.add("---xxx---")
	#	if status < -600#-652
	#		print("  -- Programm hat was boeses gemacht! --\n")
		#print(" status " + status)
		done = true

class ShellView extends MtkWidget
	History *hist
	int max_lines
	
	void __init__(History *_hist)
		hist = _hist
		max_lines = 0
		hist.view = self
		
	override void draw()
		max_lines = (p.height - 10) / LINE_HEIGHT
		p.set_color(color(1, 0,0,0))
		p.rectangle(p.all)
		p.fill()
		p.line_width = 1

		p.set_color(White)
		int offset = max_lines - hist.lines.num
		if offset > 0
			offset = 0
		p.font = font_db.get("FreeMono", float(LINE_HEIGHT) * 0.9)
		for l,i in hist.lines
			if i >= -offset
				p.draw_str(5, (i + offset)*LINE_HEIGHT+5, l)
	

class ShellWindow extends MtkWindow
	History* history
	Job* shell
	ShellView* view
	void __init__()
		super.__init__("XTerm", 600, 400)
		history = new History()
		view = new ShellView(history)
		put(view)
		
		shell = new Job(["/bin/shell"])
		mtk_add_idle(shell)
	
	override void on_key(int key)
		if key == KEY_BACKSPACE
			write(shell.pipe_in[1], &0x7f, 1)
		else if key == KEY_UP
			write(shell.pipe_in[1], &0x00415b1b, 3) # ^[A
		else if key == KEY_DOWN
			write(shell.pipe_in[1], &0x00425b1b, 3) # ^[B
		else if key == KEY_LEFT
			write(shell.pipe_in[1], &0x00435b1b, 3) # ^[C
		else if key == KEY_RIGHT
			write(shell.pipe_in[1], &0x00445b1b, 3) # ^[D
		else if key == KEY_CONTROL + KEY_Z
			write(shell.pipe_in[1], &0x1a, 1)
		else if key == KEY_CONTROL + KEY_C
			write(shell.pipe_in[1], &0x03, 1)
		else if key == KEY_CONTROL + KEY_D
			write(shell.pipe_in[1], &0x04, 1)
		else
			string s = key_to_str(key)
			if s.num > 0
				write(shell.pipe_in[1], &s[0], s.num)

ShellWindow *window

void main()
	mtk_init()
	#lib_mem_debug = true
	#kprint("START XTERM")
	
	stdout = open("/dev/tty", O_WRONLY)
	
	
	window = new ShellWindow()
	if !window.buf
		print("client: can not create a window\n")
		exit(-2)
	window.show()
		
		
	
	
	mtk_run()
	
