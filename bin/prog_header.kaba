
#define __OS__
#define __CODE_ORIGIN__ 0x00800000
#define __VARIABLE_OFFSET__ 0x00880000
#define __ADD_ENTRY_POINT__


const int O_RDONLY = 1
const int O_WRONLY = 2
const int O_RDWR = 3
const int O_APPEND = 16
const int O_CREATE = 32
const int O_NONBLOCK = 64
const int O_TRUNC = 128


const int EWOULDBLOCK = 128
const int ENOSPC = 127
const int EACCES = 126
const int EEXIST = 125
const int EINVAL = 124
const int ENOENT = 123
const int ENOMEM = 122
const int ESRCH = 121
const int ECHILD = 120
const int EBADF = 119
const int ENFILE = 118
const int EFAULT = 117
const int ENOSYS = 116

const int F_GETFL = 1
const int F_SETFL = 2


const int SHM_DEST = 1<<11
const int IPC_CREAT = 1<<12
const int IPC_EXCL = 1<<13

extern void init_lib()
extern void get_args(string[] arg)

extern int *malloc_first_free

extern int stdin, stdout
extern int lib_error

extern void cs2s(cstring cs, string s)

extern void exit(int r)
extern int execute(string[] arg, int fd_in, int fd_out)
extern int open(string filename, int flags)
extern int create(string filename)
extern void close(int h)
extern int read(int h, cstring *buf, int size)
extern int write(int h, cstring *buf, int size)
extern int mkdir(string filename)
extern int mkfifo(string filename)
extern int dup(int h)
extern int pipe(int[2] h)
extern int fcntl(int h, int op, int param)
extern int getpid()
extern string getcwd()
extern int chdir(string dir)
extern int waitpid(int pid, void *status, bool block)
extern int kill(int pid, int signal)
extern int shmget(int key, int size, int flags)
extern void* shmat(int id, int flags)
extern int shmdt(void* p)
extern int sysinfo(void *buf)

extern void showstats()
