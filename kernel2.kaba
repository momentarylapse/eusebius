#define __OS__
#define __CODE_ORIGIN__ 0x9000
#define __VARIABLE_OFFSET__ 0x200010 // > 2mb, wegen Stack!
//#define __NO_FUNCTION_FRAME__
#define __ADD_ENTRY_POINT__
//#disasm

//--------------------------------------------------------------
// Text Modus

void *VideoMemory
char TextColor, TextColor2
int TextPos, TextLine

void DrawString(int x, int y, cstring str)
	cstring *d = VideoMemory
	d = &d[2*(80*y+x)]
	int i = 0
	while str[i] != 0
		(*d)[0] = str[i]
		(*d)[1] = TextColor
		d = &d[2]
		i ++

/*int DrawHex(int x,int y,char data[1]*,int size)
	cstring ttt
	int i
	for i, 0, size
		int d=c2i(data[i])
		int d1=(d>>4)
		int d2=(d&15)
		if d1<10
			ttt[i*3]=i2c(d1+48)
		else
			ttt[i*3]=i2c(d1+97)
		if d2<10
			ttt[i*3+1]=i2c(d2+48)
		else
			ttt[i*3+1]=i2c(d2+97)
		ttt[i*3+2]=0x20 // ' '
	ttt[size*3-1]=0
	DrawString(x,y,ttt)

//--------------------------------------------------------------
// verwalteter Textmodus

void clrscr()
	asm{
		//mov eax, 0xb8000
		mov eax, 0xb80a0
		_clear_loop2:
			mov.b [eax], ' '
			add eax, 0x01
			mov.b [eax], 0x00
			add eax, 0x01
			cmp eax, 0xb8f00
			js.b _clear_loop2
	}
	TextLine=0
	TextPos=0

void clrstatus()
	asm{
		//mov eax, 0xb8000
		mov eax, 0xb8f00
		_clear_loop3:
			mov.b [eax], ' '
			add eax,0x01
			mov.b cl, TextColor2
			mov.b [eax], cl
			add eax, 0x01
			cmp eax, 0xb8fa0
			js.b _clear_loop3
	}*/

/*void etm_init()
	TextColor=def_col_text
	clrscr()
	TextColor2=def_col_greet
	DrawString(0, 0,"                 Eusebius 0.2.0   (c) by MichiSoft TM   2013                    ")
	TextColor2=def_col_status
	clrstatus()

void etm_shift()
	int *p1=i2p(0xb8140)
	int *p2=i2p(0xb80a0)
	memcpy(p2,p1,etm_nx*(etm_ny-1)*2)
	char a=TextColor2
	TextColor2=TextColor
	DrawString(0,etm_ny,"                                                                                ")
	TextColor2=a*/

/*void prints(cstring str)
	int i=0
	while str[i]!=0
		if str[i]!=0x0a
			char p[1]*
			p=i2p( (TextPos+etm_nx*(TextLine+1))*2 + 0xb8000 )
			p[0]=str[i]
			p[1]=TextColor
			TextPos++
		if (TextPos>=etm_nx) or (str[i]==0x0a)
			TextPos=0
			TextLine++
			if TextLine>=etm_ny
				etm_shift()
				TextLine=etm_ny-1
		i++

void printi(int i)
	char ttt[16]
	ttt[15]=0
	int s=14
	while true
		ttt[s]=i2c(i%10)+0x30
		i/=10
		s--
		if i == 0
			break
	cstring *p
	p = &ttt[s+1]
	prints(*p)

int printh(cstring *data,int size)
	cstring ttt
	int i
	for i, 0, size
		int d=c2i((*data)[i])
		int d1=(d>>4)
		int d2=(d&15)
		if d1<10
			ttt[i*3]=i2c(d1+48)
		else
			ttt[i*3]=i2c(d1+87)
		if d2<10
			ttt[i*3+1]=i2c(d2+48)
		else
			ttt[i*3+1]=i2c(d2+87)
		ttt[i*3+2]=0x20 // ' '
	ttt[size*3-1]=0
	print(ttt)

void print_ok()
	char tc=TextColor
	TextColor=0x02
	//TextPos=60
	TextPos+=2
	prints("ok\n")
	TextColor=tc

void WasteTime()
	int x
	for x, 0, 100000
		nil*/



void main()
	asm{
		mov eax, 0x000b8000
		mov VideoMemory, eax
	}
	TextColor = 7//32
	DrawString(0, 0, "hallo, ein kleiner Test")
	while true
		nil
