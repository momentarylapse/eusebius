/*----------------------------------------------------------------------------*\
| Eusebius - Boot Loader                                                       |
| -> Boot-Loader fuer die Root-Partition                                       |
|   -> laedt das Image des Init-Programmes von der aktuellen Partition         |
|      in den Speicher und fuehrt es aus                                       |
|                                                                              |
| zuletzt geaendert: 2008.09.14 (c) by MichiSoft TM                            |
\*----------------------------------------------------------------------------*/


#define __OS__
#define __NO_FUNCTION_FRAME__
#define __CODE_ORIGIN__ 0x7c00
//#disasm

void main()
	asm{
		// wir befinden uns noch im 16bit RealMode
		bits_16
		// Debug
		mov al, 'a'
		mov ah, 0x0e
		mov bx, 0x0000
		int 0x10

	// Image laden
		_reset_drive:
			mov dl, 0x00
			mov ah, 0x00
			int 0x13
			or ah, ah
		//jnz.b _reset_drive
		xor ax, ax
		mov es, ax
		// Ziel des Images
		mov ebx, 0x00007e00
		mov ah, 0x02 // "ReadSector"
		mov al, 0x02
		mov cx, 0x0015
		mov dx, 0x0080
		//mov al, 0x04 // 4 Sektoren = 2kb
		//mov cx, 0x0006 // Cylinder 0, Sector 6
		//mov dx, 0x0180 // Head 1 ,Disk0
		int 0x13
		or ah, ah
		//jnz _reset_drive

		
		// Debug
		mov al, 'z'
		mov ah, 0x0e
		mov bx, 0x0000
		int 0x10

		// das Image ausführen
		jmp_far 0x00007e00 // 0x0000:0x7e00



//--------------------------------------------------------------
// Daten
		// Position des zu ladenden Images      (abhängig von der Festplatte/Partitionierung!!!)
			//   (Partition-Beginn: h-s-c 01-01-00)
		_read_cx:
		dw 0x0006 // Cylinder 0, Sector 6
		_read_dx:
		dw 0x0180 // Head 1 ,Disk 0
		_read_size:
		dw 0x0004 // 4 Sektoren = 2kb
		_read_size_kernel:
		dw 0x0040 // 64 Sektoren = 32kb
		// auf welcher Partition befinden wir uns?
		_partition_no:
		dw 0x0000 // 1. primäre Partition!
	}
