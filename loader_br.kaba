#----------------------------------------------------------------------------*\
#| Eusebius - Boot Loader                                                       |
#| -> Boot-Loader fuer die Root-Partition                                       |
#|   -> laedt das Image des Init-Programmes von der aktuellen Partition         |
#|      in den Speicher und fuehrt es aus                                       |
#|                                                                              |
#| zuletzt geaendert: 2008.09.14 (c) by MichiSoft TM                            |
#\*----------------------------------------------------------------------------

func @noframe main()
	asm{
		# wir befinden uns noch im 16bit RealMode
		bits_16
		# Debug
		mov al, 'a'
		mov ah, 0x0e
		mov bx, 0x0000
		int 0x10

	# Image laden
		_reset_drive:
			mov dl, 0x00
			mov ah, 0x00
			int 0x13
			or ah, ah
		#jnz.b _reset_drive
		xor ax, ax
		mov es, ax
		# Ziel des Images
		mov ebx, 0x00007e00
		mov ah, 0x02 # "ReadSector"
		mov al, [_read_size] # Groesse: 1Sektor = 512b
		mov cx, [_read_cx]
		mov dx, [_read_dx]
		int 0x13
		or ah, ah
		#jnz _reset_drive
		# Debug
		mov al, [0x7e00]
		mov ah, 0x0e
		mov bx, 0x0000
		int 0x10
		mov al, [0x7e01]
		mov ah, 0x0e
		mov bx, 0x0000
		int 0x10
		mov al, [0x7e02]
		mov ah, 0x0e
		mov bx, 0x0000
		int 0x10

		# wichtige Daten speichern
		mov ax, [_partition_no]
		mov [0x5000], ax
		xor ax, ax
		mov [0x5002], ax
		mov ax, [_read_cx]
		add ax, [_read_size]
		mov [0x5004], ax
		mov ax, [_read_dx]
		mov [0x5006], ax
		mov ax, [_read_size_kernel]
		mov [0x5008], ax
		xor ax, ax
		mov [0x500a], ax



		# das Image ausführen
		jmp 0x00007e00 #0x0000:0x7e00



#--------------------------------------------------------------
# Daten
		# Position des zu ladenden Images      (abhängig von der Festplatte/Partitionierung!!!)
			#   (Partition-Beginn: h-s-c 01-01-00)
		_read_cx:
		dw 0x0006 # Cylinder 0, Sector 6
		_read_dx:
		dw 0x0180 # Head 1 ,Disk0
		_read_size:
		dw 0x0004 # 4 Sektoren = 2kb
		_read_size_kernel:
		dw 0x0040 # 64 Sektoren = 32kb
		# auf welcher Partition befinden wir uns?
		_partition_no:
		dw 0x0000 # 1. primäre Partition!

	}
