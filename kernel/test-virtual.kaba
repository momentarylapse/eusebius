#define __STRING_CONST_AS_CSTRING__
#define __FUNCTION_POINTER_AS_CODE__

use common
use io.text

class Base
	func __init__()
		prints("Base.init\n")
	func __delete__()
		prints("Base.delete\n")
	#void __assign__(Base b)
	func virtual f()
		prints("Base.f()\n")

class Derived extends Base
	func override __init__()
		prints("Derived.init\n")
	func override __delete__()
		prints("Derived.delete\n")
	#func __assign__(d: Derived)
	func override f()
		prints("Derived.f()\n")

		
func main()

	TextMode.init()
	TextMode.clear()
	prints("test...\n")
	
	if true
		var d: Derived
		var b: Base* = &d
	
		#prints("a\n")
		d.f()
		b.f()
		#prints("b\n")
		
#		var p: void** = &d
#		printh(&p, 8)
#		prints(" p\n")
#		var vt: void*[0]* = *p
#		printh(&vt, 8)
#		prints(" vt\n")
#		for i in 0:4
#			var pp: void* = vt[i]
#			printh(&pp, 8)
#			prints("\n")
	
	prints("done\n")
	while true
		pass

