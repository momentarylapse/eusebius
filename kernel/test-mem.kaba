#define __STRING_CONST_AS_CSTRING__
#define __FUNCTION_POINTER_AS_CODE__

use common.*
use io.text.*
use mem.memory.*
use mem.paging.*
use mem.heap.*

var rand_state: int64
func _rand(max: int) -> int
	rand_state = (rand_state * 3546323434 + 6322682374) % 53468623
	return int(rand_state) % max

let NUM_BINS = 1

func main()

	read_data_from_init()
	TextMode.init()
	TextMode.clear()
	
	Paging.init()
	Heap.init()
	
	rand_state = 6432728
	
	var p: void*[NUM_BINS]
	for i in 0:NUM_BINS
		p[i] = nil
	
	for k in 0:10000
		let i = _rand(NUM_BINS)
		prints("\n")
		printi(i)
		prints("   ")
		for q in p[i]
			prints("- ")
			Heap.free(p[i])
			p[i] = nil
		else
			prints("+ ")
			p[i] = Heap.malloc(4 + _rand(100) * (1 + _rand(40)))
		printi(Heap.allocated)
		
	
	prints("\nOK\n")
	
	
	
#	var p = Heap.malloc(1024)
#	printh(&p, 8)
#	prints("\n")
#	var p2 = Heap.malloc(1024)
#	printh(&p2, 8)
#	prints("\n")
#	printi(Heap.allocated)
#	prints("  ")
#	Heap.free(p)
#	Heap.free(p2)
#	printi(Heap.allocated)
#	prints("\n")
#	p := Heap.malloc(1024)
#	p2 := Heap.malloc(1024)
#	printh(&p, 8)
#	prints("\n")
#	printh(&p2, 8)
#	prints("\n")
#	printi(Heap.allocated)
#	prints("  ")

	while true
		pass

