#define __OS__
use "base.kaba"
use "text_mode.kaba"
use "ata.kaba"
use "filesystem.kaba"
use "std_char_devs.kaba"
use "base_mem.kaba"
use "file_access.kaba"
use "tasks.kaba"
use "interrupts.kaba"
use "syscall.kaba"
use "scheduler.kaba"
use "paging.kaba"
#define __STRING_CONST_AS_CSTRING__

//#disasm

void show_pvl()
	asm{
		db 0x9c // pushf
		pop eax
		mov __temp_i__, eax
	}
	int eflags = __temp_i__
	int pvl = (eflags >> 12) & 3
	prints("[PVL:")
	printi(pvl)
	prints("]")

void LoadKaLib()
	int h = sys_open(KernelTask, "/kalib")
	if h < 0
		panic("kann KaLib-Datei nicht lesen!")
		return
	cstring *p = _i2p(0x00030000)
	while true
		int r = sys_read(KernelTask, h, p, 1024)
		if r <= 0
			break
		p = &p[r]
	sys_close(KernelTask, h)

/*void FileTest()
	int h = sys_open("/test.txt")
	if h < 0
		prints("## kann Datei nicht lesen! ##\n")
		return
	cstring s
	int r = sys_read(h, &s, 256)
	s[r] = 0
	prints(s)
	sys_close(h)

void DriverTest()
	prints("Treiber Test\n")
	int h = sys_open("/dev/keyboard")
	if h < 0
		prints("## kann Datei nicht lesen! ##\n")
		return
	while true
		cstring s
		int r = sys_read(h, &s, 64)
		if r > 0
			printh(&s, r)
			prints(" ")
	sys_close(h)*/


void PagingTest()
	printh(_i2p(0x007ff000), 256)


void main()
	read_data_from_init()
	etm_init()
	NumMemAllocs=0
	
	prints("Willkommen zu Eusebius 0.2.4   (c) by MichiSoft TM 2014\n")
	prints("Speicher: ")
	printi(MemorySize / 1024)
	prints("k\n")
	
	Ata.Init()
	ReadPartitions(0)
	ShowPartitions()
	
	FileSystem.Init()
	FileSystem.Mount(Partition[0], FileSystem.root)
	/*FileEntry *e = FileSystem.get("/dev/b")
	if e
		e.show()
	FileSystem.root.show()*/
	
	Paging.init()
	
	InitTasks()
	
	InitInterrupts()
	
	InitDrivers()
	
	//PagingTest()

	//FileTest()
	//DriverTest()
	
	LoadKaLib()
	
	if sys_execute(KernelTask, "/shell") < 0
		panic("kann /shell-Datei nicht lesen!")
	//sys_execute(KernelTask, "/hello")
	//sys_execute(KernelTask, "/hello")
	
	StartScheduler()
	
	panic("keine Tasks")
