use "base.kaba"
use "io/text.kaba"
use "dev/ata.kaba"
use "dev/std_char_devs.kaba"
use "fs/fs.kaba"
use "fs/access.kaba"
use "fs/pipe.kaba"
use "mem/heap.kaba"
use "mem/paging.kaba"
use "mem/shared.kaba"
use "net/socket.kaba"
use "task/task.kaba"
use "task/scheduler.kaba"
use "irq/irq.kaba"
use "irq/error.kaba"
use "syscall.kaba"

const int KALIB_LOCATION = 0x00050000



void show_pvl()
	asm{
		db 0x9c // pushf
		pop eax
		mov __temp_i__, eax
	}
	int eflags = __temp_i__
	int pvl = (eflags >> 12) & 3
	prints("[PVL:")
	printi(pvl)
	prints("]")

void LoadKalib()
	prints("loading kalib... ")
	int h = KernelTask.sys_open(_p2i(&"/lib/kalib"), O_RDONLY)
	if h < 0
		panic("kann /lib/kalib nicht lesen!")
		return
	int addr = KALIB_LOCATION
	int size = 0
	while true
		int r = KernelTask.sys_read(h, addr, 1024)
		if r <= 0
			break
		size += r
		addr += r
	KernelTask.sys_close(h)
	printi(size)
	prints("b  ok\n")


void main()
	read_data_from_init()
	InitTextMode()
	InitHeap()
	
	prints("Willkommen zu ")
	prints(KERNEL_NAME)
	prints(" ")
	prints(KERNEL_VERSION)
	prints("   (c) by MichiSoft TM 2015\n")
	prints("Speicher: ")
	printi(MemorySize / 1024)
	prints("k\n")
	
	/*asm{
		mov eax, 0x8000000
		db 0x0f
		db 0xa2
		mov __temp_i__, eax
		mov __temp_i2__, ecx
		mov __temp_i3__, edx
	}
	prints("   cpu:  ")
	printh(&__temp_i__, 4)
	printh(&__temp_i2__, 4)
	printh(&__temp_i3__, 4)
	prints("\n")*/
	
	paging.init()
	
	SharedMem.init()
	
	ata.init()
	ReadPartitions(0)
	ShowPartitions()
	
	InitFileAccessData()
	InitPipes()
	InitSockets()
	
	FileSystem.init()
	
	FileSystem.mount(&Partition[2], FileSystem.root, "ext2")
	FileEntry *boot = FileSystem.get("/boot", FileSystem.root)
	FileSystem.mount(&Partition[1], boot, "michifs")
	
	InitTasks()
	
	irq.init()
	error.init()
	InitSysCall()
	
	InitDrivers()
	
	LoadKalib()
	
	int stdin = KernelTask.sys_open(_p2i(&"/dev/tty"), O_RDONLY)
	int stdout = KernelTask.sys_open(_p2i(&"/dev/tty"), O_WRONLY)
	
	if KernelTask.sys_execute(_p2i(&"/bin/shell"), stdin, stdout) < 0
		panic("kann /bin/shell-Datei nicht lesen!")
	
	StartScheduler()
	
	panic("keine Tasks")

