#define __OS__
#define __CODE_ORIGIN__ 0x00a00000
#define __VARIABLE_OFFSET__ 0x00a40000
#define __ADD_ENTRY_POINT__

extern void init_lib()

int stdin, stdout

extern void exit(int r)
extern int open(string filename)
extern void close(int h)
extern int read(int h, cstring *buf, int size)
extern int write(int h, cstring *buf, int size)
extern void get_args(string arg[])

void print(string s)
	write(stdout, &s[0], s.num)



int printh(cstring *data, int size)
	string ttt
	ttt.resize(3)
	for int i, 0, size
		int d = data[i]
		int d1 = (d>>4)
		int d2 = (d&15)
		if d1 < 10
			ttt[0] = d1+48
		else
			ttt[0] = d1+87
		if d2<10
			ttt[1] = d2+48
		else
			ttt[1] = d2+87
		if i == size-1
			ttt[2] = ' '
		else
			ttt[2] = '.'
		print(ttt)

void hd(string filename)
	int h = open(filename)
	if h < 0
		print("  --kann Datei nicht oeffnen--\n")
	string s
	while true
		s.resize(128)
		int r = read(h, &s[0], 128)
		if r <= 0
			break
		printh(&s[0], r)
	close(h)
	print("\n")


void main()
	init_lib()
	//stdin = open("/dev/keyboard")
	stdout = open("/dev/tty")
	string arg[]
	get_args(arg)
	
	for int i, 1, arg.num
		hd(arg[i])
	
	//close(stdin)
	close(stdout)
	
	exit(0)
